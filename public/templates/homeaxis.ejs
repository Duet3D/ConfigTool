<%  if (!preview) { -%>
; <%- filename %>
; called to home the <%- axisLetter %> axis
;
; generated by RepRapFirmware Configuration Tool v<%- version %> on <%- (new Date()).toString() %>

<%  }

    // Get Z-probe values
    const zProbe = model.sensors.probes.find(probe => probe !== null), zProbeIndex = model.sensors.probes.indexOf(zProbe);
    const diveHeight = zProbe ? zProbe.diveHeight : 5;
    const travelSpeed = zProbe ? zProbe.travelSpeed : 6000;

    // Get endstop
    const endstop = (axisIndex >= 0 && axisIndex < model.sensors.endstops.length) ? model.sensors.endstops[axisIndex] : null;
    const firstDriver = (axis.drivers.length > 0) ? model.configTool.drivers.find(driver => driver.id.equals(axis.drivers[0])) : null;
    const fastHomingSpeed = (firstDriver && firstDriver.homingSpeeds.length > 0) ? firstDriver.homingSpeeds[0] * 60 : 600;
    const slowHomingSpeed = (firstDriver && firstDriver.homingSpeeds.length > 1) ? firstDriver.homingSpeeds[1] * 60 : 300;
    const zLiftCanHitEndstop = model.sensors.endstops.some(endstop => (endstop !== null) && (endstop.letter === 'Z') && endstop.highEnd);

    // Check how the axis is supposed to be homed
    if (endstop) {
        // Increase Z if not homing Z or if homing using a probe
        if (axisLetter !== 'Z' || endstop.type === EndstopType.ZProbeAsEndstop) { -%>
; increase Z
G91 ; relative positioning
G1 <%- params({
    H: zLiftCanHitEndstop ? 1 : undefined,
    Z: diveHeight
}) %> ; move Z relative to current position to avoid dragging nozzle over the bed
G90 ; absolute positioning

<%      } -%>
; home <%- axisLetter %>
<%      if (axisLetter === 'Z' && endstop.type === EndstopType.ZProbeAsEndstop) {
            // Home Z using Z-probe
            if (model.move.compensation.probeGrid !== null && model.move.compensation.probeGrid.axes[0] === 'X' && model.move.compensation.probeGrid.axes[1] === 'Y') {
                if (preview) { -%>
; NOTE: The following XY position is determined from the probe grid defined in the next section
<%              } -%>
var xCenter = move.compensation.probeGrid.mins[0] + (move.compensation.probeGrid.maxs[0] - move.compensation.probeGrid.mins[0]) / 2 - sensors.probes[<%- zProbeIndex %>].offsets[0]
var yCenter = move.compensation.probeGrid.mins[1] + (move.compensation.probeGrid.maxs[1] - move.compensation.probeGrid.mins[1]) / 2 - sensors.probes[<%- zProbeIndex %>].offsets[1]
<%          } else { -%>
var xCenter = model.move.axes[0].min + (model.move.axes[0].max - model.move.axes[0].min) / 2 - sensors.probes[<%- zProbeIndex %>].offsets[0]
var yCenter = model.move.axes[1].min + (model.move.axes[1].max - model.move.axes[1].min) / 2 - sensors.probes[<%- zProbeIndex %>].offsets[1]
<%          } -%>
G1 <%- params({
    X: "{var.xCenter}",
    Y: "{var.yCenter}",
    F: travelSpeed
}) %> ; go to bed centre
G30 ; probe the bed
<%      } else {
            // Home cartesian axis
-%>
var maxTravel = move.axes[<%- axisIndex %>].max - move.axes[<%- axisIndex %>].min + 5 ; calculate how far <%- axisLetter %> can travel plus 5mm
G1 <%- params({
    H: 1,
    [axisLetter]: endstop.highEnd ? "{var.maxTravel}" : "{-var.maxTravel}",
    F: fastHomingSpeed
}) %> ; <%- (fastHomingSpeed !== slowHomingSpeed) ? "coarse home" : "home" %> in the <%- (endstop.highEnd ? "+" : "-") + axisLetter %> direction
<%          if (fastHomingSpeed !== slowHomingSpeed) {
                // second pass
-%>
G1 <%- params({
    [axisLetter]: endstop.highEnd ? -5 : 5,
    F: travelSpeed
}) %> ; move back 5mm
G1 <%- params({
    H: 1,
    [axisLetter]: endstop.highEnd ? "{var.maxTravel}" : "{-var.maxTravel}",
    F: slowHomingSpeed
}) %> ; fine home in the <%- (endstop.highEnd ? "+" : "-") + axisLetter %> direction
<%          }

            // Decrease Z again only if Z isn't being homed
            if (axisLetter !== 'Z') { -%>

; decrease Z again
G91 ; relative positioning
G1 <%- params({
    Z: -diveHeight,
    F: travelSpeed
}) %> ; move Z relative to current position
G90 ; absolute positioning
<%          }
        }
    } else {
-%>
G92 <%- params({ [axisLetter]: 0 }) %> ; set <%- axisLetter %>=0
M118 L1 P0 S"Warning: <%- axisLetter %> is NOT homed but its position has been set to 0."
<%  } -%>
