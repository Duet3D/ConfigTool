; Configuration file for RepRapFirmware on <%- model.boardType %>
; executed by the firmware on start-up
;
; generated by RepRapFirmware Configuration Tool v<%- version %> on <%- (new Date()).toString() %>

; General
<%- await render("config/general") -%>
<%  if (model.sbc === null && model.network.interfaces.some(iface => iface.type === NetworkInterfaceType.lan)) { -%>

; Network
<%-     await render("config/network") -%>
<%  } -%>
<%  if (model.boards.some(board => board.canAddress)) { -%>

; Wait a moment for the CAN expansion boards to become available
G4 S2
<%  }
    // TODO use sections call for the following
-%>
<%- await render("config/drivers/index") -%>

; Kinematics
<%- await render("config/kinematics") -%>

; Axes
<%- await render("config/axes") -%>

<%  if (model.configTool.capabilities.fff && model.move.extruders.length > 0) { -%>
; Extruders
<%-     await render("config/extruders") -%>

<%  } -%>
<%  if (model.sensors.probes.some(probe => probe !== null)) { -%>
; Probes
<%-     await render("config/probes") -%>

<%  } -%>
; Sensors
<%- await render("config/sensors") -%>
<%  if (model.heat.heaters.some(heater => heater !== null)) { -%>

; Heaters
<%-     await render("config/heaters") -%>

<%  } -%>
<%  if (model.configTool.capabilities.cnc && model.spindles.length > 0) { -%>
; Spindles
<%-     await render("config/spindles") -%>

<%  } -%>
<%  if (model.configTool.capabilities.laser && model.lasers.length > 0) { -%>
; Lasers
<%-     await render("config/laser") -%>

<%  } -%>
<%  if (model.tools.length > 0) { -%>
; Tools
<%-     await render("config/tools") -%>
    
<%  } -%>

; End of config.g
<%- await render("config/end") -%>
