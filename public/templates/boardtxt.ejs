<%
getPin = function(value) {
    return (value === null || !value) ? "NoPin" : value
}
%>

// Board Hardware configuration file for <%- objectModelBoard.name %>
// generated by RepRapFirmware Configuration Tool (STM Version) v<%- version %> 
// on <%- (new Date()).toString() %>

//Note: Each line should be less than 120 characters.
//    : Unwanted options can be commented out or set to NoPin. Lines commented out will get default values
//    : for pins the default is NoPin.
//    : Values for Arrays need to be contained within { and }
//    : Comments can be defined with // or # (comments are not supported inside arrays)
//    : Each config entry must be all on a single line.

board = <%- stm.board %>

//LED blinks to indicate Platform is spinning or other diagnostic 
//Comment out or set to NoPin if not wanted.
leds.diagnostic = <%- getPin(stm.statusPin) %>

<%_ if (stm.esp32.onboard) { -%>
// WiFi pins
8266wifi.espDataReadyPin = <%- getPin(stm.esp32.dataReadyPin) %>
8266wifi.TfrReadyPin = <%- getPin(stm.esp32.tfrReadyPin) %>
8266wifi.espResetPin = <%- getPin(stm.esp32.resetPin) %>
8266wifi.csPin = <%- getPin(stm.esp32.csPin) %>
// ESP32 RX/TX Settings (used to update WiFi firmware)
8266wifi.serialRxTxPins = {<%- getPin(stm.esp32.rxPin) -%>,<%- getPin(stm.esp32.txPin) -%>}
<%_ } else if (stm.esp8266.onboard) { -%>
// WiFi pins
8266wifi.espDataReadyPin = <%- getPin(stm.esp8266.dataReadyPin) %>
8266wifi.TfrReadyPin = <%- getPin(stm.esp8266.tfrReadyPin) %>
8266wifi.espResetPin = <%- getPin(stm.esp8266.resetPin) %>
8266wifi.csPin = <%- getPin(stm.esp8266.csPin) %>
// ESP32 RX/TX Settings (used to update WiFi firmware)
8266wifi.serialRxTxPins = {<%- getPin(stm.esp8266.rxPin) -%>,<%- getPin(stm.esp8266.txPin) -%>}
<% } else if (stm.esp32.module && model.configTool.networkEspType === "esp32") { -%>
// WiFi pins
8266wifi.espDataReadyPin = <%- getPin(stm.esp32.dataReadyPin) %>
8266wifi.TfrReadyPin = <%- getPin(stm.esp32.tfrReadyPin) %>
8266wifi.espResetPin = <%- getPin(stm.esp32.resetPin) %>
8266wifi.csPin = <%- getPin(stm.esp32.csPin) %>
// ESP32 RX/TX Settings (used to update WiFi firmware)
8266wifi.serialRxTxPins = {<%- getPin(stm.esp32.rxPin) -%>,<%- getPin(stm.esp32.txPin) -%>}
<%_ } else if (stm.esp8266.module && model.configTool.networkEspType === "esp8266") { -%>
// WiFi pins
8266wifi.espDataReadyPin = <%- getPin(stm.esp8266.dataReadyPin) %>
8266wifi.TfrReadyPin = <%- getPin(stm.esp8266.tfrReadyPin) %>
8266wifi.espResetPin = <%- getPin(stm.esp8266.resetPin) %>
8266wifi.csPin = <%- getPin(stm.esp8266.csPin) %>
// ESP32 RX/TX Settings (used to update WiFi firmware)
8266wifi.serialRxTxPins = {<%- getPin(stm.esp8266.rxPin) -%>,<%- getPin(stm.esp8266.txPin) -%>}
<% } -%>

// Drivers
<% if (model.boardDefinition.hasSmartDrivers === true) { -%>
stepper.numSmartDrivers = <%- model.boardDefinition.numDrivers %>
<%
if (model.boardDefinition.stm.stepper.driverType === null) {
var driverTypes = "{" 
for (var i=0; i < model.boardDefinition.numDrivers;  i++) {
    if(i > 0 ) { driverTypes += ","; }
    driverTypes += model.configTool.drivers[i].type
}
driverTypes += "}";
-%>
stepper.DriverType = <%- driverTypes %>
<% } else { -%>
stepper.DriverType = {<%- model.boardDefinition.stm.stepper.driverType.join() -%>}
<% } -%>
<% if (model.boardDefinition.stm.stepper.spiChannel !== null) { -%>
stepper.spiChannel = <%- model.boardDefinition.stm.stepper.spiChannel %>
<% if (model.boardDefinition.stm.stepper.spiPins !== null) { -%>
SPI<%- model.boardDefinition.stm.stepper.spiChannel -%>.pins = {<%- model.boardDefinition.stm.stepper.spiPins.join() -%>}
<% } -%>
<% } -%>
<% } -%>
<% if (!!model.boardDefinition.stm.stepper.enablePins) { -%>
stepper.enablePins = {<%- model.boardDefinition.stm.stepper.enablePins.join() -%>}
<% } -%>
<% if (!!model.boardDefinition.stm.stepper.stepPins) { -%>
stepper.stepPins = {<%- model.boardDefinition.stm.stepper.stepPins.join() -%>}
<% } -%>
<% if (!!model.boardDefinition.stm.stepper.directionPins) { -%>
stepper.directionPins = {<%- model.boardDefinition.stm.stepper.directionPins.join() -%>}
<% } -%>

<% if (!!model.sbc) { -%>
// SBC
sbc.TfrReadyPin = <%- model.boardDefinition.stm.sbc.tfrReadyPin -%>
<% if (!!model.boardDefinition.stm.sbc.csPin) { -%>
sbc.csPin = model.boardDefinition.stm.sbc.csPin
<% } -%>
<% } -%>
