<%  if (!preview) { -%>
; runonce.g
; called after config.g. As soon as this file has finished, it is automatically deleted!
;
; generated by RepRapFirmware Configuration Tool v<%- version %> on <%- (new Date()).toString() %>

<%  }

    // Show message box on first run in SBC mode
    if (model.sbc !== null) { -%>
M291 P"Applying persistent configuration options" R"Please wait" S1 T60 ; show that persistent settings are being configured
while exists(sbc) && plugins.DuetPiManagementPlugin.pid < 0 && iterations < 30
  G4 S2 ; wait for DuetPiManagementPlugin to become available
G4 S2 ; wait another moment
M550 P<%- escape(model.network.name) -%> ; set persistent hostname
<%  }

    // Configure network interfaces
    for (let i = 0; i < model.network.interfaces.length; i++) {
        const iface = model.network.interfaces[i];
        if (model.network.interfaces.length === 1) {
            i = undefined;
        }

        if (iface.state !== NetworkInterfaceState.disabled) {
            if (iface.type === NetworkInterfaceType.lan) {
                if (model.sbc !== null) { -%>
M552 <%- params({
    I: i,
    P: [iface.configuredIP ?? "0.0.0.0"],
    S: 1
}) %> ; configure Ethernet adapter
<%                  if (iface.configuredIP && iface.configuredIP !== "0.0.0.0") { -%>
M553 P<%- iface.subnet %> ; set netmask
M554 P<%- iface.gateway %> ; set gateway
<%                  }
                }
            }
            if (iface.type === NetworkInterfaceType.wifi && model.configTool.wifi.ssid.trim() !== "") {
                if (model.sbc === null) { -%>
M552 <%- params({
    I: i,
    S: 0
}) %> ; disable WiFi adapter
G4 P500 ; wait half a second
M552 <%- params({
    I: i,
    S: 1
}) %> ; enable WiFi adapter
G4 P1000 ; wait a second
<%              }

                if (iface.configuredIP === null || iface.configuredIP === "0.0.0.0") { -%>
M587 <%- params({
    S: model.configTool.wifi.ssid,
    P: model.configTool.wifi.psk
}) %> ; configure WiFi using DHCP
<%              } else { -%>
M587 <%- params({
    S: model.configTool.wifi.ssid,
    P: model.configTool.wifi.psk,
    I: [iface.configuredIP ?? "0.0.0.0"],
    J: [iface.gateway],
    K: [iface.netmask]
}) %> ; configure WiFi using static IP address
<%              }
            }
        }

        if (i === undefined) {
            break;
        }
    }

    if (model.sbc !== null) {
        // Configure network protocols
        for (const protocol of Object.values(NetworkProtocol)) {
            if (model.network.interfaces.some(iface => iface.state !== NetworkInterfaceState.disabled && iface.activeProtocols.has(protocol))) {
                let protocolNumber = undefined, protocolSecure = undefined, protocolName = undefined;
                switch (protocol) {
                    case NetworkProtocol.HTTP:
                        protocolNumber = 0;
                        protocolName = "HTTP";
                        break;
                    case NetworkInterfaceState.HTTPS:
                        protocolNumber = 0;
                        protocolSecure = 1;
                        protocolName = "HTTPS";
                        break;
                    case NetworkProtocol.FTP:
                        protocolNumber = 1;
                        protocolName = "FTP";
                        break;
                    case NetworkInterfaceState.FTPS:
                        protocolNumber = 1;
                        protocolSecure = 1;
                        protocolName = "SFTP";
                        break;
                    case NetworkProtocol.Telnet:
                        protocolNumber = 2;
                        protocolName = "Telnet";
                        break;
                    case NetworkProtocol.SSH:
                        protocolNumber = 2;
                        protocolSecure = 1;
                        protocolName = "SSH";
                        break;
                }

                if (protocolNumber !== undefined) { -%>
M586 <%- params({
    P: protocolNumber,
    T: protocolSecure,
    S: 1
}) %> ; configure <%- protocolName %>
<%              }
            }
        }
    }

    if (model.sbc !== null) { -%>
M292 ; hide message box again upon completion
<%  } -%>