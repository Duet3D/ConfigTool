<%  if (!preview) { -%>
; homeall.g
; called to home all axes
;
; generated by RepRapFirmware Configuration Tool v<%- version %> on <%- (new Date()).toString() %>
<%  } -%>

<%  // home standard axes
    if (model.move.kinematics.name === KinematicsName.cartesian) { -%>
<%-     await render("homeall/cartesian") %>
<%  } else if (model.move.kinematics.name === KinematicsName.coreXZ) { -%>
<%-     await render("homeall/corexz") %>
<%  } else if (model.move.kinematics instanceof CoreKinematics) { -%>
<%-     await render("homeall/corexy") %>
<%  } else if (model.move.kinematics.name === KinematicsName.hangprinter) { -%>
<%-     await render("homeall/hangprinter") %>
<%  } else if (model.move.kinematics.name === KinematicsName.polar) { -%>
<%-     await render("homeall/polar") %>
<%  } else if (model.move.kinematics instanceof ScaraKinematics) { -%>
<%-     await render("homeall/scara") %>
<%  } else { -%>
; unsupported kinematics <%- model.move.kinematics.name -%>
<%  } -%>

<%  // home additional axes
    for (const axis of model.move.axes) {
        if (!['X', 'Y', 'Z'].includes(axis.letter) && model.canHomeIndividualAxis(axis.letter)) { -%>
M98 P"home<%- /[a-z]/.test(axis.letter) ? `'${axis.letter}` : axis.letter %>.g" ; home <%- axis.letter %> axis
<%      }
    } -%>
