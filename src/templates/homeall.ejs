; homeall.g
; called to home all axes
;
; generated by RepRapFirmware Configuration Tool v2 on <%- (new Date()).toString() %>
G91 ; relative positioning
<%	const axes = ["X", "Y", "Z"];
	let a = 0, b = 1, c = 2; // Home all the axes in the order ABC
	if (template.geometry.type.startsWith("core")) {
		if (template.geometry.type == "corexz") {
			a = 0; b = 2; c = 1;
		} // coreyz is no longer supported
	}

	if (c == 2) { -%>
G1 Z<%- template.z_dive_height %> F<%- template.travel_speed * 60 %> S2 ; lift Z relative to current position
<%	}

	let deployProbe = false;
	for(let i = 0; i < 3; i++) {
		if (template.drives[i].endstop_type == 3) {
			deployProbe = template.probe.deploy;
			break;
		}
	}
	if (deployProbe && template.firmware < 1.21) { -%>
M98 Pdeployprobe.g ; deploy mechanical Z probe
<%	}
	if ((template.drives[a].endstop_type == 3 || template.drives[b].endstop_type == 3) && (template.probe.type == "modulated")) { -%>
M558 P1 ; set probe to unmodulated mode (required for RRP 4-wire probe)
<%	}
	let travelToA = template.geometry.maxes[a] - template.geometry.mins[a] + 5;
	let travelToB = template.geometry.maxes[b] - template.geometry.mins[b] + 5;
	const travelBackA = (template.drives[a].endstop_location == 1) ? 5 : -5;
	const travelBackB = (template.drives[b].endstop_location == 1) ? 5 : -5;
	if (template.drives[a].endstop_location == 1) { travelToA *= -1; }
	if (template.drives[b].endstop_location == 1) { travelToB *= -1; } 

	if (template.geometry.type.startsWith("core")) { -%>
G1 S1 <%- axes[a] + travelToA %> <%- axes[b] %><%- travelToB %> F<%- template.homing_speed_fast * 60 %> ; move quickly to <%- axes[a] %> or <%- axes[b] %> endstop and stop there (first pass)
G1 S1 <%- axes[a] + travelToA %> ; home <%- axes[a] %> axis
G1 S1 <%- axes[b] + travelToB %> ; home <%- axes[b] %> axis
G1 <%- axes[a] + travelBackA %> <%- axes[b] + travelBackB %> F<%- template.travel_speed * 60 %> ; go back a few mm
G1 S1 <%- axes[a] + travelToA %> F<%- template.homing_speed_slow * 60 %> ; move slowly to <%- axes[a] %> axis endstop once more (second pass)
G1 S1 <%- axes[b] + travelToB %> ; then move slowly to <%- axes[b] %> axis endstop
<%	} else { -%>
G1 S1 X<%- travelToA %> Y<%- travelToB %> F<%- template.homing_speed_fast * 60 %> ; move quickly to X and Y axis endstops and stop there (first pass)
G1 X<%- travelBackA %> Y<%- travelBackB %> F<%- template.travel_speed * 60 %> ; go back a few mm
G1 S1 X<%- travelToA %> Y<%- travelToB %> F<%- template.homing_speed_slow * 60 %> ; move slowly to X and Y axis endstops once more (second pass)
<%	}

	if ((template.drives[a].endstop_type == 3 || template.drives[b].endstop_type == 3) && (template.probe.type == "modulated")) { -%>
M558 P2 ; set probe back to modulated mode
<%	}
	if (c != 2) { -%>
G1 S2 Z<%- template.z_dive_height %> F<%- template.travel_speed * 60 %> ; lift Z relative to current position
<%	}

	if (c != 2 || template.drives[c].endstop_type != 3) {
		let travelToC = template.geometry.maxes[c] - template.geometry.mins[c] + 5;
		let travelCDirection = "up";
		if (template.drives[c].endstop_location == 1) {
			travelCDirection = "down";
			travelToC *= -1;
		} -%>
G1 S1 <%- axes[c] + travelToC %> F<%- template.homing_speed_fast * 60 %> ; move <%- axes[c] %> <%- travelCDirection %> stopping at the endstop
G90 ; absolute positioning
<%		if (c == 2) { -%>
G92 <%- axes[c] + template.geometry.mins[c] %> ; set <%- axes[c] %> to axis minimum (you may want to adjust this)
<%		}
	} else { -%>
G90 ; absolute positioning
G1 X<%- util.getFirstProbePoint(0) - template.probe.x_offset %> Y<%- util.getFirstProbePoint(1) - template.probe.y_offset %> F<%- template.travel_speed * 60 %> ; go to first bed probe point and home Z
G30 ; home Z by probing the bed
<%	}

	if (c == 2) { -%>

; Uncomment the following lines to lift Z after probing
;G91 ; relative positioning
;G1 S2 Z<%- template.z_dive_height %> F<%- template.travel_speed %> ; lift Z relative to current position
;G90 ; absolute positioning

<%	}
	if (deployProbe && template.firmware < 1.21) { %>
M98 Pretractprobe.g ; retract mechanical Z probe
<%	} -%>
