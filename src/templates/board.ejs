// Board Hardware configuration file for <%- board.caption %>
// generated by RepRapFirmware Configuration Tool (LPC Version) v2 
// on <%- (new Date()).toString() %>

//Note: Each line should be less than 120 characters.
//    : Unwanted options can be commented out or set to NoPin. Lines commented out will get default values
//    : for pins the default is NoPin.
//    : Values for Arrays need to be contained within { and }
//    : Comments can be defined with // or # (comments are not supported inside arrays)
//    : Each config entry must be all on a single line.

lpc.board = <%- template.board %>; 

//LED blinks to indicate Platform is spinning or other diagnostic 
//Comment out or set to NoPin if not wanted.
leds.diagnostic = <%- board.lpc.diagnosticPin %>; 

//Internal SDCard SPI Frequency.
lpc.internalSDCard.spiFrequencyHz  = <%- board.lpc.internalSDCardSPIFrequencyHz %>;

//Only supports 1 External SDCard
<%- (template.externalSDCard.present)?"":"//" -%>externalSDCard.csPin               = <%- board.lpc.externalSDCard.csPin %>;
<%- (template.externalSDCard.present)?"":"//" -%>externalSDCard.cardDetectPin       = <%- board.lpc.externalSDCard.cardDetectPin %>;
<%- (template.externalSDCard.present)?"":"//" -%>lpc.externalSDCard.spiFrequencyHz  = <%- board.lpc.externalSDCard.spiFrequencyHz %>;
<%- (template.externalSDCard.present)?"":"//" -%>lpc.externalSDCard.spiChannel  = <%- board.lpc.externalSDCard.spiChannel %>;

//LCD Pins (only ST9720 SPI currently supported)
<% if(board.lpc.lcd.spiChannel == 2) //softwareSPI
	{ -%>
//setup the Software SPI Pins for LCD
lpc.softwareSPI.pins = {<%- util.makePlainArrayString(board.lpc.softwareSPI.pins) %>}; //Set to GPIO pins to use as SCK, MISO, MOSI
<%	} -%>
<%- (template.display.type)?"":"//" -%>lcd.spiChannel =     <%- board.lpc.lcd.spiChannel %>;
<%- (template.display.type)?"":"//" -%>lcd.lcdCSPin =       <%- board.lpc.lcd.lcdCSPin %>;
<%- (template.display.type)?"":"//" -%>lcd.lcdBeepPin =     <%- board.lpc.lcd.lcdBeepPin %>;
<%- (template.display.type)?"":"//" -%>lcd.encoderPinA =    <%- board.lpc.lcd.encoderPinA %>;
<%- (template.display.type)?"":"//" -%>lcd.encoderPinB =    <%- board.lpc.lcd.encoderPinB %>;
<%- (template.display.type)?"":"//" -%>lcd.encoderPinSw =   <%- board.lpc.lcd.encoderPinSw %>; //click
<%- (template.display.type)?"":"//" -%>lcd.lcdDCPin =       <%- board.lpc.lcd.lcdDCPin %>;  //DataControl Pin (A0) if none used set to NoPin
<%- (template.display.type)?"":"//" -%>lcd.panelButtonPin = <%- board.lpc.lcd.panelButtonPin %>; //Extra button on RRD Panel


<%
	let tempSensePins = [];

	//Heater therms
	for(var i=0; i<template.heaters.length; i++){
		tempSensePins.push(template.heaters[i].sensor_pin);	
	}
-%>
heat.tempSensePins = {<%- util.makePlainArrayString(tempSensePins) %>}; //Max of 3 entries
//heat.spiTempSensorCSPins = { }; //Max of 2 entries
	 
